#
# ***** BEGIN LICENSE BLOCK *****
# Zimbra Collaboration Suite Web Client
# Copyright (C) 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2016 Synacor, Inc.
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software Foundation,
# version 2 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
# You should have received a copy of the GNU General Public License along with this program.
# If not, see <https://www.gnu.org/licenses/>.
# ***** END LICENSE BLOCK *****
#
# en_US generated on Fri Jan 18 11:51:15 PST 2008
currencyCode = HKD
currencySymbol = HK$
eraAD = \u897f\u5143
eraBC = \u897f\u5143\u524d
firstDayOfWeek = 1
formatDateFull = yyyy\u5e74MMMMd\u65e5, EEEE
formatDateLong = yyyy\u5e74M\u6708d\u65e5
formatDateMedium = yyyy/M/d
formatDateShort = yyyy\u5e74M\u6708d\u65e5
formatDateNumber=\u6708\uff0f\u65e5\uff0f\u5e74
formatDateTime = {0} {1}
formatDateTimeShort = yyyy\u5e74M\u6708d\u65e5 a h:mm
formatNumber = #,##0.###
formatNumberCurrency = \u00a4#,##0.00;(\u00a4#,##0.00)
formatNumberInteger = #,##0
formatNumberPercent = #,##0%
formatTimeFull = a h:mm:ss z
formatTimeLong = a h:mm:ss z
formatTimeMedium = a h:mm:ss
formatTimeShort = a h:mm

# Add as many regexes as you'd like (without holes in the numbering sequence). They will in turn test the user input until a match is found.
# The first capturing group of the regex is the hours, the second is the minutes, and the third (optional) specifies am or pm time. Just leave$
# When the optional ampm group is present in a match, 12 hours will be converted to 0 hours, and when the matched value is present in
# the parseTimePMChars value, 12 hours will be added to the time.
parseTime1 = (\\d\\d)[\\.\\:\\s]?(\\d\\d)\\s*([ap])?
parseTime2 = (\\d)[\\.\\:\\s]?(\\d\\d)\\s*([ap])?
parseTime3 = (\\d{1,2})(\\d*)\\s*([ap])?
parseTimePMChars = pP

monthAprLong = 4 \u6708
monthAprMedium = 4
monthAugLong = 8 \u6708
monthAugMedium = 8
monthDecLong = 12 \u6708
monthDecMedium = 12
monthFebLong = 2 \u6708
monthFebMedium = 2
monthJanLong = 1 \u6708
monthJanMedium = 1
monthJulLong = 7 \u6708
monthJulMedium = 7
monthJunLong = 6 \u6708
monthJunMedium = 6
monthMarLong = 3 \u6708
monthMarMedium = 3
monthMayLong = 5 \u6708
monthMayMedium = 5
monthNovLong = 11 \u6708
monthNovMedium = 11
monthOctLong = 10 \u6708
monthOctMedium = 10
monthSepLong = 9 \u6708
monthSepMedium = 9
numberInfinity = \u221e
numberNaN = \ufffd
numberSeparatorDecimal = .
numberSeparatorGrouping = ,
numberSeparatorMoneyDecimal = .
numberSignMinus = -
numberSignPerMill = \u2030
numberSignPercent = %
numberZero = 0
periodAm = \u4e0a\u5348
periodPm = \u4e0b\u5348
weekdayFriLong = \u661f\u671f\u4e94
weekdayFriMedium = \u4e94
weekdayMonLong = \u661f\u671f\u4e00
weekdayMonMedium = \u4e00
weekdaySatLong = \u661f\u671f\u516d
weekdaySatMedium = \u516d
weekdaySunLong = \u661f\u671f\u65e5
weekdaySunMedium = \u65e5
weekdayThuLong = \u661f\u671f\u56db
weekdayThuMedium = \u56db
weekdayTueLong = \u661f\u671f\u4e8c
weekdayTueMedium = \u4e8c
weekdayWedLong = \u661f\u671f\u4e09
weekdayWedMedium = \u4e09
